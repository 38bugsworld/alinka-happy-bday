import { useEffect, useRef, useState } from "react";
import cn from "classnames";

import bg from "./assets/bg.jpg";
import loveLetterImg from "./assets/love-letter.png";
import cakeImg from "./assets/cake.png";
import cake2Img from "./assets/cake-2.png";
import cake3Img from "./assets/cake-3.png";
import meImg from "./assets/me.jpg";
import youImg from "./assets/you.jpg";
import heartImg from "./assets/heart.png";
import zazuImg from "./assets/zazu.jpg";
import bunnyImg from "./assets/bunny.jpg";
import catsImg from "./assets/cats.png";
import bannerImg from "./assets/banner.png";
import paperOpenMp3 from './assets/paper.mp3';
import paperCloseMp3 from './assets/paper-hide.mp3';
import candleBlowMp3 from './assets/candle-blow.mp3';
import happyBirthdayMp3 from './assets/happy-birthday.mp3';
import eatCakeMp3 from './assets/eat-cake.mp3';

import useOnClickOutside from "./hooks/useOnClickOutside";
import styles from "./App.module.scss";

import { Howl } from "howler";
import classNames from "classnames";

const paperOpenSound = new Howl({
  src: [paperOpenMp3],
});

const paperHideSound = new Howl({
  src: [paperCloseMp3],
});

const candleSound = new Howl({
  src: [candleBlowMp3],
});

const happyBirthdayMusic = new Howl({
  src: [happyBirthdayMp3],
  volume: 0.5,
});

const eatCakeSound = new Howl({
  src: [eatCakeMp3],
  volume: 1.5,
});

const isMobileDevice = () => {
  return /Mobi|Android|IOS|iPad|iPhone/i.test(navigator.userAgent);
};

function App() {
  const [isLetterOpen, setIsLetterOpen] = useState(false);
  const [isLetterRead, setIsLetterRead] = useState(false);
  const [isCakeClicked, setIsCakeClicked] = useState(false);
  const [isZazuVisible, setIsZazuVisible] = useState(false);
  const [isBunnyVisible, setIsBunnyVisible] = useState(false);
  const [isCakeBitted, setIsCakeBitted] = useState(false);

  const paperRef = useRef(null);

  useOnClickOutside(paperRef, () => {
    if (isLetterOpen) {
      setIsLetterOpen(false);
      paperHideSound.play();
      happyBirthdayMusic.play();
    }
  });

  const handleLetterOpen = () => {
    setIsLetterOpen(true);
    paperOpenSound.play();

    setTimeout(() => {
      setIsLetterRead(true);
    }, 500)
  };

  const handleCakeClick = () => {
    if (!isCakeClicked) {
      setIsCakeClicked(true);
      candleSound.play();
    }

    if (isCakeClicked && !isCakeBitted) {
      setIsCakeBitted(true);
      eatCakeSound.play();
    }
  };

  useEffect(() => {
    const handleEsc = (event) => {
      if (event.keyCode === 27) {
        if (isLetterOpen) {
          setIsLetterOpen(false);
          paperHideSound.play();
          happyBirthdayMusic.play();
        }
      }
    };

    document.addEventListener("keydown", handleEsc);

    return () => {
      document.removeEventListener("keydown", handleEsc);
    };
  }, [isLetterOpen]);

  if (isMobileDevice()) {
    return (
      <main className={styles.container}>
        <img className={styles.bg} src={bg} />
        <p
          style={{
            position: "fixed",
            fontSize: 100,
            width: "100%",
            textAlign: "center",
          }}
        >
          —à—É—Ä—É–π –Ω–∞ –¥–µ—Å–∫—Ç–æ–øü´£
        </p>
      </main>
    );
  }

  return (
    <main className={styles.container}>
      <img className={styles.bg} src={bg} />

      {!isLetterRead && (
        <img
          className={styles.loveLetter}
          src={loveLetterImg}
          onClick={handleLetterOpen}
        />
      )}
      <img
        src={bannerImg}
        className={cn(styles.banner, {
          [styles.active]: isLetterRead && !isLetterOpen,
        })}
      />
      <img
        src={catsImg}
        className={cn(styles.cats, {
          [styles.active]: isLetterRead && !isLetterOpen,
        })}
      />
      <img
        className={classNames(styles.cake, {
          [styles.active]: isLetterRead && !isLetterOpen,
          [styles.bitted]: isCakeBitted,
        })}
        src={isCakeClicked ? (isCakeBitted ? cake3Img : cake2Img) : cakeImg}
        onClick={handleCakeClick}
      />

      <div
        className={cn(styles.paperContainer, {
          [styles.open]: isLetterOpen,
        })}
        ref={paperRef}
      >
        <div className={styles.paper}>
          <p className={styles.paper__text}>
            –ø—Ä–∏–≤—ñ—Ç, –º–æ—è –ª—é–±—ñ–º–∞ –¥—î–≤–æ—á–∫–∞ !!!!!
            <br />
            <br />
            —Å—å–æ–≥–æ–¥–Ω—ñ —Ç–≤—ñ–π –¥–µ–Ω—å —ñ —è –¥—É–∂–µ —Ä–∞–¥–∏–π —â–æ –º–æ–∂—É —Ç–µ–±–µ –∑ –Ω–∏–º –ø—Ä–∏–≤—ñ—Ç–∞—Ç–∏. –∑–∞
            —á–∞—Å –Ω–∞—à–æ–≥–æ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è —Ç–∏ —Å—Ç–∞–ª–∞ –¥–ª—è –º–µ–Ω–µ –¥—É–∂–µ –±–ª–∏–∑—å–∫–æ—é —ñ –¥—É–∂–µ —Ä—ñ–¥–Ω–æ—é
            –ª—é–¥–∏–Ω–∫–æ—é, —è —Ö–æ—á—É —â–æ–± —Ç–∏ –≤ —á–µ—Ä–≥–æ–≤–∏–π —Ä–∞–∑ –∑–Ω–∞–ª–∞ —â–æ —è –¥—É–∂–µ —Ü—ñ–Ω—É—é –≤—Å—ñ
            –º–æ–º–µ–Ω—Ç–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω—ñ —Ä–∞–∑–æ–º –∑ —Ç–æ–±–æ—é. —è —á–∞—Å—Ç–æ –∑–∞–¥—É–º—É—é—Å—å, —â–æ –Ω–µ –∑–Ω–∞—é —â–æ
            –±–∏ —è —Ä–æ–±–∏–≤, –∑–Ω–∏–∫–Ω–∏ —Ç–∏ –≤–¥—Ä—É–≥ –∑ –º–æ–≥–æ –∂–∏—Ç—Ç—è.
            <br />
            <br />
            —Ç–∏ –±–µ–∑–º–µ–∂–Ω–æ –±–∞–≥–∞—Ç–æ –∑–Ω–∞—á–∏—à –¥–ª—è –º–µ–Ω–µ
            <br />
            –∑ –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —Ç–µ–±–µ, –∞–ª—ñ–Ω–∫–∞ üíò
            <br />
            <br />
            <span>
              p.s. —Ç—É—Ç —î –ø–∞—Å—Ö–∞–ª–æ—á–∫–∞ —Ö–∏—Ö–∏—Ö–∏—Ö–∏

            </span>
            <br />
            <span>
              p.s.s. —à–æ–± –∑–∞–∫—Ä–∏—Ç–∏ –ª–∏—Å—Ç –∫–ª—ñ–∫–Ω–∏ –∑–∞ –º–µ–∂–∞–º–∏ –ø–∞–ø–µ—Ä—É

            </span>
          </p>
          <div className={styles.lovePicContainer}>
            <div className={styles.lovePic}>
              <img
                className={styles.alina}
                src={isZazuVisible ? zazuImg : youImg}
                onClick={() => setIsZazuVisible(true)}
              />
              <img
                src={isBunnyVisible ? bunnyImg : meImg}
                onClick={() => setIsBunnyVisible(true)}
              />
              {isZazuVisible && isBunnyVisible && (
                <img className={styles.heart} src={heartImg} />
              )}
            </div>
          </div>
        </div>
      </div>
    </main>
  );
}

export default App;
